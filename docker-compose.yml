version: "3.7"

services:
  backend:
    container_name: backend
    build: ./backend
    ports:
      - "8000:8000"
    networks:
      - evraz-network
    environment:
      DD_DB_HOST: db
    command: /server
    depends_on:
      - db

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - 3000:3000
    links:
      - backend

  prediction:
    build: ./prediction/
    environment:
      DD_DB_HOST: db
    depends_on:
      - db
    networks:
      - evraz-network

  db:
    container_name: db
    image: postgres:15.2-alpine
    ports:
      - "5432:5432"
    networks:
      - evraz-network
    environment:
      POSTGRES_USER: goland
      POSTGRES_PASSWORD: goland
      POSTGRES_DB: goland
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql


#  consumer:
#    container_name: consumer
#    build: ./consumer
#    depends_on:
#      - kafka
#    networks:
#      - evraz-network
#
#  zookeeper:
#    image: wurstmeister/zookeeper
#    expose:
#      - "2181"
#
#  kafka:
#    image: wurstmeister/kafka
#    ports:
#      - "9092:9092"
#    expose:
#      - "9093"
#
#    environment:
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
#      KAFKA_SASL_ENABLED_MECHANISMS: SCRAM-SHA-256
#    depends_on:
#      - zookeeper
#    volumes:
#      - ./:/etc/kafka


volumes:
  database_data:

networks:
  evraz-network:
    driver: bridge